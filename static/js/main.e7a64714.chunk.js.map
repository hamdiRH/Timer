{"version":3,"sources":["App.js","index.js"],"names":["App","useState","on","setOn","timems","settimems","interval","setinterval","useEffect","setInterval","clearInterval","className","ms","msPerMinute","msPerSecond","msPerHour","hours","Math","floor","hoursRest","minutes","minutesRest","seconds","String","padStart","timeenms","type","value","onClick","ReactDOM","render","document","getElementById"],"mappings":"sLAqEeA,EAnEH,WAAO,IAAD,EACIC,oBAAS,GADb,mBACTC,EADS,KACLC,EADK,OAEYF,mBAAS,GAFrB,mBAETG,EAFS,KAEDC,EAFC,OAGgBJ,mBAAS,MAHzB,mBAGTK,EAHS,KAGCC,EAHD,KA8BhBC,qBAAU,WACR,GAAIN,EAAI,CACN,IAAMI,EAAWG,aAAY,WAC3BJ,GAAU,SAACD,GAAD,OAAYA,EAAS,SAC9B,KAEH,OADAG,EAAYD,GACL,kBAAMI,cAAcJ,OAE5B,CAACJ,IAMJ,OACE,sBAAKS,UAAU,iBAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,cAAf,SA3CW,SAACC,GAChB,IACMC,EAAcC,IACdC,EAAYF,KAEZG,EAAQC,KAAKC,MAAMN,EAAKG,GACxBI,EAAYP,EAAKG,EACjBK,EAAUH,KAAKC,MAAMC,EAAYN,GACjCQ,EAAcF,EAAYN,EAC1BS,EAAUL,KAAKC,MAAMG,EARP,KAUpB,OACEE,OAAOP,GAAOQ,SAAS,EAAG,KAC1B,IACAD,OAAOH,GAASI,SAAS,EAAG,KAC5B,IACAD,OAAOD,GAASE,SAAS,EAAG,KA2BIC,CAASrB,KACvC,sBAAKO,UAAU,YAAf,UACE,qBAAKA,UAAU,iBAAf,kBACA,qBAAKA,UAAU,iBAAf,oBACA,qBAAKA,UAAU,iBAAf,0BAGJ,uBACA,uBACA,uBACEA,UAAU,MACVe,KAAK,SACLC,MAAOrB,EAAW,QAAU,QAC5BsB,QArCQ,WACRtB,GACFI,cAAcJ,GACdC,EAAY,GACZJ,GAAM,IACDA,GAAM,MAkCX,uBAAOQ,UAAU,MAAMe,KAAK,SAASC,MAAM,QAAQC,QAvBzC,WACZlB,cAAcJ,GACdD,EAAU,GACVE,EAAY,a,MCvChBsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e7a64714.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst App = () => {\r\n  const [on, setOn] = useState(false);\r\n  const [timems, settimems] = useState(0);\r\n  const [interval, setinterval] = useState(null);\r\n  const timeenms = (ms) => {\r\n    const msPerSecond = 1000;\r\n    const msPerMinute = msPerSecond * 60;\r\n    const msPerHour = msPerMinute * 60;\r\n\r\n    const hours = Math.floor(ms / msPerHour);\r\n    const hoursRest = ms % msPerHour;\r\n    const minutes = Math.floor(hoursRest / msPerMinute);\r\n    const minutesRest = hoursRest % msPerMinute;\r\n    const seconds = Math.floor(minutesRest / msPerSecond);\r\n\r\n    return (\r\n      String(hours).padStart(2, \"0\") +\r\n      \":\" +\r\n      String(minutes).padStart(2, \"0\") +\r\n      \":\" +\r\n      String(seconds).padStart(2, \"0\")\r\n    );\r\n  };\r\n  const start = () => {\r\n    if (interval) {\r\n      clearInterval(interval);\r\n      setinterval(0);\r\n      setOn(false);\r\n    } else setOn(true);\r\n  };\r\n  useEffect(() => {\r\n    if (on) {\r\n      const interval = setInterval(() => {\r\n        settimems((timems) => timems + 1000);\r\n      }, 1000);\r\n      setinterval(interval);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [on]);\r\n  const reset = () => {\r\n    clearInterval(interval);\r\n    settimems(0);\r\n    setinterval(null);\r\n  };\r\n  return (\r\n    <div className=\"time-container\">\r\n      <div className=\"time-inner-container\">\r\n        <div className=\"time-digits\">{timeenms(timems)}</div>\r\n        <div className=\"time-text\">\r\n          <div className=\"time-text-item\">Hour</div>\r\n          <div className=\"time-text-item\">Minute</div>\r\n          <div className=\"time-text-item\">Second</div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n      <br />\r\n      <input\r\n        className=\"btn\"\r\n        type=\"button\"\r\n        value={interval ? \"Pause\" : \"Start\"}\r\n        onClick={start}\r\n      />\r\n      <input className=\"btn\" type=\"button\" value=\"Reset\" onClick={reset} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './App.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}